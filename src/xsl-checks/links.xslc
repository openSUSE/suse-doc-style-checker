<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:db5="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:py="https://www.gitorious.org/style-checker/style-checker"
  xmlns:exslt="http://exslt.org/common"
  exclude-result-prefixes="db5 xlink py exslt">
  <xsl:import href="library.xsl"/>

  <xsl:output method="xml" indent="yes" omit-xml-declaration="yes"/>

  <xsl:template match="*|db5:*" mode="part-title">Links</xsl:template>


  <xsl:template match="ulink|db5:link">
    <xsl:variable name="url" select="normalize-space(@url|@xlink:href)"/>

    <!-- Probably non-exhaustive. -->
    <xsl:if test="not(starts-with($url, 'http:') or
                      starts-with($url, 'https:') or
                      starts-with($url, 'ftp:') or
                      starts-with($url, 'gopher:') or
                      starts-with($url, 'nntp:') or
                      starts-with($url, 'rtsp:') or
                      starts-with($url, 'mms:') or
                      starts-with($url, 'rm:'))">
      <xsl:choose>
        <xsl:when test="starts-with($url, 'ssh:') or
                        starts-with($url, 'ssh+svn:') or
                        starts-with($url, 'git:') or
                        starts-with($url, 'bzr:')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              references a URL that most browsers cannot open.
            </message>
            <suggestion>To reference URLs browser cannot open, use the
              <tag>filename</tag> element.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:when test="starts-with($url, 'info:')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              references an info page.
            </message>
            <suggestion>To reference info pages, use the phrase
              <quote>see the info page of <em>command</em></quote>.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:when test="starts-with($url, 'man:')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              references a man page.
            </message>
            <suggestion>To reference man pages, use the phrase
              <quote>see the man page of <em>command</em></quote>.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:when test="starts-with($url, 'file:') or
                        starts-with($url, 'smb:')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              references a local file, directory or network.
            </message>
            <suggestion>To reference local files, directories, or networks,
              use the <tag>filename</tag> element.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:when test="starts-with($url, 'mailto:') or contains($url, '@')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              references an e-mail address.
            </message>
            <suggestion>To reference e-mail addresses, use the
              <tag>email</tag> element.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:when test="contains($url, '.com') or contains($url, '.net') or
                        contains($url, '.org') or contains($url, '.biz') or
                        contains($url, '.co.') or contains($url, '.gov') or
                        contains($url, '.edu') or contains($url, '.de') or
                        contains($url, '.fr') or contains($url, '.es') or
                        contains($url, '.ru') or contains($url, '.br') or
                        contains($url, '.cn') or contains($url, '.in')">
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              appears to contain no protocol identifier.
            </message>
            <suggestion>If you have forgotten an <quote>http://</quote>
              or similar prefix, add it.
            </suggestion>
          </result>
        </xsl:when>
        <xsl:otherwise>
          <result type="error">
            <xsl:call-template name="sourcehint"/>
            <message>Link
              <xsl:call-template name="createid">
                <xsl:with-param name="use-url-attribute" select="1"/>
              </xsl:call-template>
              appears to contain no protocol identifier.
            </message>
            <suggestion>If you have forgotten an <quote>http://</quote>
              or similar prefix, add it.
            </suggestion>
            <suggestion>To reference local files, directories,
              or networks, use the <tag>filename</tag> element.
            </suggestion>
            <suggestion>To reference e-mail addresses, use the
              <tag>email</tag> element.
            </suggestion>
          </result>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
    <!-- These URL checks are pretty crude but should exclude some
         unshortenable URLs. -->
    <xsl:if test="string-length($url) &gt; 70 and
                  not(contains($url, '.suse.com/documentation') or
                      contains($url, '.suse.com/releasenotes') or
                      contains($url, 'en.opensuse.org'))">
      <result type="warning">
        <xsl:call-template name="sourcehint"/>
        <message>Link
          <xsl:call-template name="createid">
            <xsl:with-param name="use-url-attribute" select="1"/>
          </xsl:call-template>
          contains a very long URL.
        </message>
        <suggestion>Try to shorten this URL by leaving away any unimportant
          parts of it.
        </suggestion>
        <suggestion>Some pages
          <xsl:if test="contains($url, '.h-online.com')">such as The H</xsl:if>
          <xsl:if test="contains($url, '.heise.de')">such as Heise online</xsl:if>
          <xsl:if test="contains($url, '.youtube.com')">such as YouTube</xsl:if>
          <xsl:if test="contains($url, '.flickr.com')">such as Flickr</xsl:if>
          <xsl:if test="contains($url, '.amazon.com')">such as Amazon</xsl:if>
          offer a permanent link or short link function.
        </suggestion>
      </result>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
